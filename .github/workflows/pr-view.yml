name: PR Reviewer Bot

on:
pull_request:
types: [opened, synchronize] # Trigger on PR open and update

jobs:
review:
name: Run PR AI Review
runs-on: ubuntu-latest

# Centralized environment variables for the entire job
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_REPOSITORY: ${{ github.repository }}

steps:
  - name: Checkout repository
    uses: actions/checkout@v4

  - name: Set up Python
    uses: actions/setup-python@v5
    with:
      python-version: "3.10"

  - name: Install dependencies
    run: pip install groq requests flake8 flake8-json

  # --- Static Analysis Phase (ROBUST FIX) ---
  - name: Run Flake8 Static Analysis
    # CRITICAL FIX: Use 'continue-on-error: true'. 
    # This tells the GitHub Runner to ignore the exit code 1 from flake8 
    # and proceed to the next steps, ensuring the report is available.
    continue-on-error: true 
    run: |
      echo "Running flake8 analysis..."
      # The command remains clean, as 'continue-on-error' handles the failure
      flake8 --format=json --output-file=flake8-report.json .
      echo "âœ… Static analysis report generated: flake8-report.json"

  # --- 1. Base AI Review (No Analyzer Data) ---
  - name: Run Base AI Review
    # This step will now execute even if Flake8 failed above.
    run: python review_bot.py

  # --- 2. Informed AI Review (With Analyzer Data) ---
  - name: Run AI Review Informed by Static Analysis
    # This step will also execute, using the generated report.
    run: python review_bot.py --with-analyzer
